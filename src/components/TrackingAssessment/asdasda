   const Submit = (e) => {
   e.preventDefault();
   const weight = grades.map((grade) => parseInt(grade.kpi_weight));
   const valueSelected = [];
   const result = [];
   //for value of selectedValues
   selectedValues.forEach((item) => {
     item.forEach((score) => {
       score.forEach((value) => {
         valueSelected.push(parseInt(value));
       })
     })
   })
   //weight calculation
   weight.forEach((weight, index) => {
     const calculatedValue = (weight / 100) * valueSelected[index];
     result.push(calculatedValue.toFixed(2));
   });
   const totalsubmitted = valueSelected.length;
   //how many kpis are there in the form
   const totalGrades = pillars.reduce((accumulator, pillar) => {
     const objectiveGrades = objectives
       .filter((object) => object.obj_eval_pillar_id === pillar.eval_pillar_id)
       .reduce((objAccumulator, object) => {
         const gradeCount = grades.filter(
           (grade) => grade.kpi_objective_id === object.obj_objective_id
         ).length;
         return objAccumulator + gradeCount;
       }, 0);
     return accumulator + objectiveGrades;
   }, 0);
 if (totalGrades === totalsubmitted) {
   if (tbl_name.length === 0) {
     alert("Please select an available quarter!");
   }
   else {
     const formspID = grades.find((item) => item.hr_eval_form_sp_id).hr_eval_form_sp_id;
     const grade_id = [];
     grades.forEach((grade) => grade_id.push(grade.table_id));
     const metric = selectedValues.flat(Infinity);
     const rem = remarks.flat(Infinity);
     // const url = "http://localhost/unmg_pms/api/userSubmitTrackingEmployee.php";
     // let fData = new FormData();
     // fData.append("submit", true);
     // fData.append('tbl_name', tbl_name);
     // fData.append("formspID", formspID);
     // fData.append('grade_id', JSON.stringify(grade_id));
     // fData.append('metric', JSON.stringify(metric));
     // fData.append('remarks', JSON.stringify(rem));
     // axios.post(url, fData)
     //   .then(response => alert(response.data))
     //   .catch(error => alert(error));
     // navigate(-1);
   }
 }
 else {
   //alert('Please complete all the required fields');
 }
};